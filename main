-- Optimized Server Hop UI - Only shows current and last server

local function StartServerHopUI()
    if not game:IsLoaded() then game.Loaded:Wait() end

    local HttpService = game:GetService("HttpService")
    local TeleportService = game:GetService("TeleportService")
    local Players = game:GetService("Players")
    local Player = Players.LocalPlayer
    local PlaceId = game.PlaceId
    local JobId = game.JobId

    local RootFolder = "ServerHop"
    local StorageFile = `{RootFolder}/{PlaceId}.json`
    local Tracked = { Start = tick(), Jobs = {} }

    if not isfolder(RootFolder) then makefolder(RootFolder) end
    if isfile(StorageFile) then
        local data = HttpService:JSONDecode(readfile(StorageFile))
        if tick() - data.Start < 3600 then
            Tracked = data
        end
    end

    if Tracked.Jobs[1] ~= JobId then
        table.insert(Tracked.Jobs, 1, JobId)
        while #Tracked.Jobs > 2 do
            table.remove(Tracked.Jobs)
        end
        writefile(StorageFile, HttpService:JSONEncode(Tracked))
    end

    local function ServerHopSmart()
        local cursor = ""
        local triedServers = {}

        local function fetchServers()
            local url = `https://games.roblox.com/v1/games/{PlaceId}/servers/Public?sortOrder=Asc&limit=100{cursor ~= "" and "&cursor="..cursor or ""}`
            local success, res = pcall(function() return game:HttpGet(url) end)
            if not success then return nil end
            local data = HttpService:JSONDecode(res)
            cursor = data.nextPageCursor or ""
            return data.data
        end

        while true do
            local servers = fetchServers()
            if not servers then break end

            for _, server in ipairs(servers) do
                local isJoinable = server.playing < server.maxPlayers
                    and not table.find(Tracked.Jobs, server.id)
                    and not table.find(triedServers, server.id)
                    and server.id ~= JobId

                if isJoinable then
                    TeleportService:TeleportToPlaceInstance(PlaceId, server.id, Player)
                    return
                end
            end

            if cursor == "" then
                task.wait(1.5)
                cursor = ""
                triedServers = {}
            end
        end
    end

    -- GUI SETUP
    local guiParent = Player:WaitForChild("PlayerGui", 5) or game:GetService("CoreGui")
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ServerHopUI"
    screenGui.ResetOnSpawn = false
    screenGui.IgnoreGuiInset = true
    screenGui.Parent = guiParent

    local function CreateButtonFrame(position, text, onClick)
        local frame = Instance.new("Frame")
        frame.Size = UDim2.new(0, 130, 0, 40)
        frame.Position = position
        frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        frame.BorderSizePixel = 0
        frame.Active = true
        frame.Draggable = true
        frame.Parent = screenGui

        local button = Instance.new("TextButton")
        button.Size = UDim2.new(1, 0, 1, 0)
        button.Text = text
        button.TextColor3 = Color3.new(1, 1, 1)
        button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        button.Font = Enum.Font.GothamBold
        button.TextSize = 15
        button.AutoButtonColor = true
        button.Parent = frame

        button.MouseButton1Click:Connect(onClick)
    end

    -- Buttons
    CreateButtonFrame(
        UDim2.new(0.5, -140, 1, -100),
        "Rejoin Server",
        function()
            TeleportService:TeleportToPlaceInstance(PlaceId, JobId, Player)
        end
    )

    CreateButtonFrame(
        UDim2.new(0.5, 10, 1, -100),
        "Server Hop",
        ServerHopSmart
    )

    -- Sidebar for recent servers
    local sidebar = Instance.new("Frame")
    sidebar.Size = UDim2.new(0, 220, 0, 100)
    sidebar.Position = UDim2.new(1, -225, 0.5, -50)
    sidebar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    sidebar.BorderSizePixel = 0
    sidebar.Parent = screenGui

    local scroll = Instance.new("ScrollingFrame")
    scroll.Size = UDim2.new(1, 0, 1, 0)
    scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
    scroll.ScrollBarThickness = 4
    scroll.BackgroundTransparency = 1
    scroll.Parent = sidebar

    local function refreshServerList()
        scroll:ClearAllChildren()
        local y = 0

        for index, id in ipairs(Tracked.Jobs) do
            local row = Instance.new("Frame")
            row.Size = UDim2.new(1, -10, 0, 40)
            row.Position = UDim2.new(0, 5, 0, y)
            row.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
            row.BorderSizePixel = 0
            row.Parent = scroll

            local text = Instance.new("TextLabel")
            text.Size = UDim2.new(1, -60, 1, 0)
            text.Position = UDim2.new(0, 5, 0, 0)
            text.Text = (index == 1 and "Current Server" or "Last Server") .. "\n" .. id
            text.TextColor3 = (index == 1 and Color3.fromRGB(0, 255, 0) or Color3.new(1, 1, 1))
            text.TextWrapped = true
            text.BackgroundTransparency = 1
            text.Font = Enum.Font.Code
            text.TextSize = 13
            text.TextXAlignment = Enum.TextXAlignment.Left
            text.Parent = row

            local join = Instance.new("TextButton")
            join.Size = UDim2.new(0, 50, 0, 30)
            join.Position = UDim2.new(1, -55, 0.5, -15)
            join.Text = "Join"
            join.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
            join.TextColor3 = Color3.fromRGB(255, 255, 255)
            join.Font = Enum.Font.GothamBold
            join.TextSize = 13
            join.Parent = row

            join.MouseButton1Click:Connect(function()
                TeleportService:TeleportToPlaceInstance(PlaceId, id, Player)
            end)

            y += 45
        end

        scroll.CanvasSize = UDim2.new(0, 0, 0, y)
    end

    refreshServerList()
end

task.spawn(StartServerHopUI)
