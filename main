task.spawn(function()
    if not game:IsLoaded() then game.Loaded:Wait() end

    local HttpService = game:GetService("HttpService")
    local TeleportService = game:GetService("TeleportService")
    local Players = game:GetService("Players")
    local TweenService = game:GetService("TweenService")
    local Player = Players.LocalPlayer
    local PlaceId = game.PlaceId
    local JobId = game.JobId

    local RootFolder = "ServerHop"
    local StorageFile = `{RootFolder}/{PlaceId}.json`
    local MaxTracked = 2

    if not isfolder(RootFolder) then makefolder(RootFolder) end

    local Tracked = {}
    if isfile(StorageFile) then
        local data = HttpService:JSONDecode(readfile(StorageFile))
        if typeof(data) == "table" then
            Tracked = data
        end
    end

    if not table.find(Tracked, JobId) then
        table.insert(Tracked, 1, JobId)
        if #Tracked > MaxTracked then table.remove(Tracked, #Tracked) end
        writefile(StorageFile, HttpService:JSONEncode(Tracked))
    end

    -- GUI SETUP
    local guiParent = Player:WaitForChild("PlayerGui", 5) or game:GetService("CoreGui")
    local screenGui = Instance.new("ScreenGui", guiParent)
    screenGui.Name = "ServerHopUI"
    screenGui.ResetOnSpawn = false
    screenGui.IgnoreGuiInset = true

    -- Main Buttons
    local function CreateMainButton(text, position, callback)
        local btn = Instance.new("TextButton")
        btn.Size = UDim2.new(0, 150, 0, 40)
        btn.Position = position
        btn.Text = text
        btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        btn.TextColor3 = Color3.new(1, 1, 1)
        btn.Font = Enum.Font.GothamBold
        btn.TextSize = 16
        btn.BorderSizePixel = 0
        btn.AutoButtonColor = true
        btn.Parent = screenGui
        btn.MouseButton1Click:Connect(callback)
        return btn
    end

    -- Buttons (repositioned)
    CreateMainButton("Rejoin Server", UDim2.new(0.5, -160, 1, -170), function()
        TeleportService:TeleportToPlaceInstance(PlaceId, JobId, Player)
    end)

    CreateMainButton("Server Hop", UDim2.new(0.5, 10, 1, -170), function()
        loadstring([[
            local HttpService = game:GetService("HttpService")
            local TeleportService = game:GetService("TeleportService")
            local cursor = ""
            local tried = {}
            local function fetch()
                local url = "https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100" .. (cursor ~= "" and "&cursor=" .. cursor or "")
                local success, res = pcall(function() return game:HttpGet(url) end)
                if success then
                    local data = HttpService:JSONDecode(res)
                    cursor = data.nextPageCursor or ""
                    return data.data
                end
            end
            while true do
                local servers = fetch()
                if not servers then break end
                for _, s in ipairs(servers) do
                    if s.playing < s.maxPlayers and s.id ~= game.JobId and not table.find(tried, s.id) then
                        table.insert(tried, s.id)
                        TeleportService:TeleportToPlaceInstance(game.PlaceId, s.id, game.Players.LocalPlayer)
                        return
                    end
                end
                if cursor == "" then wait(1); tried = {} end
            end
        ]])()
    end)

    -- Sidebar Toggle Button
    local toggleBtn = Instance.new("TextButton", screenGui)
    toggleBtn.Text = "➤"
    toggleBtn.Size = UDim2.new(0, 30, 0, 40)
    toggleBtn.Position = UDim2.new(1, -35, 0.5, -100)
    toggleBtn.AnchorPoint = Vector2.new(0, 0.5)
    toggleBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    toggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleBtn.Font = Enum.Font.GothamBold
    toggleBtn.TextSize = 18
    toggleBtn.ZIndex = 10

    -- Sidebar Frame
    local sidebar = Instance.new("Frame", screenGui)
    sidebar.Size = UDim2.new(0, 260, 0, 160)
    sidebar.Position = UDim2.new(1, 0, 0.5, -80)
    sidebar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    sidebar.BorderSizePixel = 0
    sidebar.ZIndex = 9

    -- Scroll area
    local scroll = Instance.new("ScrollingFrame", sidebar)
    scroll.Size = UDim2.new(1, 0, 1, 0)
    scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
    scroll.ScrollBarThickness = 4
    scroll.BackgroundTransparency = 1
    scroll.ZIndex = 9

    -- Refresh list
    local function refreshServerList()
        scroll:ClearAllChildren()
        local y = 0

        for _, id in ipairs(Tracked) do
            local row = Instance.new("Frame", scroll)
            row.Size = UDim2.new(1, -10, 0, 40)
            row.Position = UDim2.new(0, 5, 0, y)
            row.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
            row.BorderSizePixel = 0
            row.ZIndex = 9

            local label = Instance.new("TextLabel", row)
            label.Size = UDim2.new(1, -70, 1, 0)
            label.Position = UDim2.new(0, 5, 0, 0)
            label.TextXAlignment = Enum.TextXAlignment.Left
            label.BackgroundTransparency = 1
            label.TextColor3 = id == JobId and Color3.fromRGB(100, 255, 100) or Color3.fromRGB(255, 255, 255)
            label.Font = Enum.Font.Gotham
            label.TextSize = 14
            label.Text = (id == JobId and "[Current] " or "") .. "Server ID: " .. id
            label.ZIndex = 9

            if id ~= JobId then
                local join = Instance.new("TextButton", row)
                join.Size = UDim2.new(0, 50, 0, 26)
                join.Position = UDim2.new(1, -55, 0.5, -13)
                join.Text = "Join"
                join.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
                join.TextColor3 = Color3.fromRGB(255, 255, 255)
                join.Font = Enum.Font.GothamBold
                join.TextSize = 13
                join.ZIndex = 9

                join.MouseButton1Click:Connect(function()
                    TeleportService:TeleportToPlaceInstance(PlaceId, id, Player)
                end)
            end

            y += 45
        end

        scroll.CanvasSize = UDim2.new(0, 0, 0, y + 5)
    end

    -- Toggle Animation
    local open = false
    toggleBtn.MouseButton1Click:Connect(function()
        open = not open
        toggleBtn.Text = open and "⬅" or "➤"
        local goal = open and UDim2.new(1, -265, 0.5, -80) or UDim2.new(1, 0, 0.5, -80)
        TweenService:Create(sidebar, TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Position = goal }):Play()
    end)

    refreshServerList()
end)
