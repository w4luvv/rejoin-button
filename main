task.spawn(function()
    if not game:IsLoaded() then game.Loaded:Wait() end

    local HttpService = game:GetService("HttpService")
    local TeleportService = game:GetService("TeleportService")
    local Players = game:GetService("Players")
    local TweenService = game:GetService("TweenService")
    local Player = Players.LocalPlayer
    local PlaceId, JobId = game.PlaceId, game.JobId

    local RootFolder = "ServerHop"
    local StorageFile = `{RootFolder}/{PlaceId}.json`
    local MaxTracked = 2
    if not isfolder(RootFolder) then makefolder(RootFolder) end

    local Tracked = {}
    if isfile(StorageFile) then
        local data = HttpService:JSONDecode(readfile(StorageFile))
        if typeof(data)=="table" then Tracked = data end
    end
    if not table.find(Tracked, JobId) then
        table.insert(Tracked,1,JobId)
        if #Tracked>MaxTracked then table.remove(Tracked,#Tracked) end
        writefile(StorageFile,HttpService:JSONEncode(Tracked))
    end

    local gui = Instance.new("ScreenGui",Player:WaitForChild("PlayerGui",5) or game:GetService("CoreGui"))
    gui.Name="ServerHopUI"
    gui.ResetOnSpawn=false
    gui.IgnoreGuiInset=true

    local function mkBtn(txt,pos,cb)
        local b=Instance.new("TextButton",gui)
        b.Size=UDim2.new(0,150,0,40)
        b.Position=pos
        b.Text=txt
        b.BackgroundColor3=Color3.fromRGB(40,40,40)
        b.TextColor3=Color3.new(1,1,1)
        b.Font=Enum.Font.GothamBold
        b.TextSize=16
        b.BorderSizePixel=0
        b.AutoButtonColor=true
        b.MouseButton1Click:Connect(cb)
        return b
    end

    mkBtn("Rejoin Server",UDim2.new(0.5,-160,1,-200),function()
        TeleportService:TeleportToPlaceInstance(PlaceId,JobId,Player)
    end)

    mkBtn("Server Hop",UDim2.new(0.5,10,1,-200),function()
        loadstring([[
            local HttpService=game:GetService("HttpService")
            local TeleportService=game:GetService("TeleportService")
            local cursor=""
            local tried={}
            local function fetch()
                local url="https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"..(cursor~="" and"&cursor="..cursor or"")
                local s,r=pcall(function()return game:HttpGet(url)end)
                if s then
                    local d=HttpService:JSONDecode(r)
                    cursor=d.nextPageCursor or ""
                    return d.data
                end
            end
            while true do
                local sv=fetch()
                if not sv then break end
                for _,s2 in ipairs(sv) do
                    if s2.playing<s2.maxPlayers and s2.id~=game.JobId and not table.find(tried,s2.id) then
                        table.insert(tried,s2.id)
                        TeleportService:TeleportToPlaceInstance(game.PlaceId,s2.id,game.Players.LocalPlayer)
                        return
                    end
                end
                if cursor=="" then wait(1); tried={} end
            end
        ]])()
    end)

    local toggle = Instance.new("TextButton",gui)
    toggle.Size=UDim2.new(0,30,0,40)
    toggle.Position=UDim2.new(1,-35,0.5,-100)
    toggle.AnchorPoint=Vector2.new(0,0.5)
    toggle.BackgroundColor3=Color3.fromRGB(50,50,50)
    toggle.TextColor3=Color3.fromRGB(255,255,255)
    toggle.Font=Enum.Font.GothamBold
    toggle.TextSize=18
    toggle.Text="➤"
    toggle.ZIndex=10

    local panel = Instance.new("Frame",gui)
    panel.Size=UDim2.new(0,300,0,260)
    panel.Position=UDim2.new(1,0,0.5,-130)
    panel.BackgroundColor3=Color3.fromRGB(25,25,25)
    panel.BorderSizePixel=0
    panel.Visible=false
    panel.ZIndex=9

    local scroll = Instance.new("ScrollingFrame",panel)
    scroll.Size=UDim2.new(1,0,1,0)
    scroll.CanvasSize=UDim2.new(0,0,0,0)
    scroll.ScrollBarThickness=4
    scroll.BackgroundTransparency=1

    local activePanel = "none"
    local function clearScroll()
        for i,v in ipairs(scroll:GetChildren()) do if v:IsA("Frame") or v:IsA("TextLabel") or v:IsA("TextButton") then v:Destroy() end end
    end
    local function refreshHop()
        clearScroll()
        local y=0
        for i,id in ipairs(Tracked) do
            local f=Instance.new("Frame",scroll)
            f.Size=UDim2.new(1,-10,0,50)
            f.Position=UDim2.new(0,5,0,y)
            f.BackgroundColor3=Color3.fromRGB(35,35,35)
            f.BorderSizePixel=0

            local lbl=Instance.new("TextLabel",f)
            lbl.Size=UDim2.new(1,-80,1,0)
            lbl.Position=UDim2.new(0,5,0,0)
            lbl.BackgroundTransparency=1
            lbl.TextXAlignment=Enum.TextXAlignment.Left
            lbl.Font=Enum.Font.Gotham
            lbl.TextSize=14
            lbl.Text=(id==JobId and"[Current] " or "").."Server ID: "..id
            lbl.TextColor3=id==JobId and Color3.fromRGB(100,255,100) or Color3.new(1,1,1)

            if id~=JobId then
                local btn=Instance.new("TextButton",f)
                btn.Size=UDim2.new(0,60,0,30)
                btn.Position=UDim2.new(1,-65,0.5,-15)
                btn.Text="Join"
                btn.Font=Enum.Font.GothamBold
                btn.TextSize=13
                btn.BackgroundColor3=Color3.fromRGB(80,80,80)
                btn.TextColor3=Color3.new(1,1,1)
                btn.MouseButton1Click:Connect(function()
                    TeleportService:TeleportToPlaceInstance(PlaceId,id,Player)
                end)
            end
            y+=55
        end
        scroll.CanvasSize=UDim2.new(0,0,0,y+5)
    end

    local function refreshSnipe()
        clearScroll()
        -- build all Stream Snipe GUI elements here (TextBoxes, labels, Start button, etc.)
        -- same as your old UI but parented to 'scroll' and sized/positioned appropriately
        -- implement button logic to snipe player
    end

    toggle.MouseButton1Click:Connect(function()
        panel.Visible=not panel.Visible
        toggle.Text=panel.Visible and"⬅" or"➤"
        if panel.Visible then
            if activePanel=="hop" then refreshHop()
            elseif activePanel=="snipe" then refreshSnipe()
            else activePanel="hop"; refreshHop() end
        end
        TweenService:Create(panel,TweenInfo.new(0.25,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),{Position=panel.Visible and UDim2.new(1,-300,0.5,-130) or UDim2.new(1,0,0.5,-130)}):Play()
    end)

    -- Optional: dedicated button to open Snipe panel:
    mkBtn("Stream Snipe",UDim2.new(0.5,-75,1,-250),function()
        if activePanel~="snipe" then activePanel="snipe" end
        panel.Visible=true; toggle.Text="⬅"
        refreshSnipe()
        TweenService:Create(panel,TweenInfo.new(0.25,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),{Position=UDim2.new(1,-300,0.5,-130)}):Play()
    end)
end)
