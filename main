task.spawn(function()
    if not game:IsLoaded() then game.Loaded:Wait() end

    local HttpService = game:GetService("HttpService")
    local TeleportService = game:GetService("TeleportService")
    local Players = game:GetService("Players")
    local TweenService = game:GetService("TweenService")
    local Player = Players.LocalPlayer
    local PlaceId, JobId = game.PlaceId, game.JobId

    local Root, Store = "ServerHop", `{ServerHop}/{PlaceId}.json`
    if not isfolder(Root) then makefolder(Root) end
    local tracked = {}
    if isfile(Store) then pcall(function() tracked = HttpService:JSONDecode(readfile(Store)) end) end
    if not table.find(tracked, JobId) then
        table.insert(tracked,1,JobId)
        if #tracked>2 then table.remove(tracked,3) end
        writefile(Store, HttpService:JSONEncode(tracked))
    end

    local gui = Instance.new("ScreenGui", Player:WaitForChild("PlayerGui",5))
    gui.Name, gui.ResetOnSpawn, gui.IgnoreGuiInset = "ServerHopUI", false, true

    local function mkBtn(txt,pos,cb)
        local b = Instance.new("TextButton", gui)
        b.Size, b.Position = UDim2.new(0,150,0,40), pos
        b.Text, b.Font, b.TextSize = txt, Enum.Font.GothamBold, 16
        b.BackgroundColor3, b.TextColor3 = Color3.fromRGB(40,40,40), Color3.new(1,1,1)
        b.BorderSizePixel, b.AutoButtonColor = 0, true
        b.MouseButton1Click:Connect(cb)
        return b
    end

    mkBtn("Rejoin Server", UDim2.new(0.5,-160,1,-170), function()
        TeleportService:TeleportToPlaceInstance(PlaceId, JobId, Player)
    end)
    mkBtn("Server Hop", UDim2.new(0.5,10,1,-170), function()
        loadstring([[
            local HttpService=game:GetService("HttpService")
            local TeleportService=game:GetService("TeleportService")
            local cursor, tried = "", {}
            while true do
                local url = "https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"..(cursor~="" and"&cursor="..cursor or"")
                local ok,res = pcall(game.HttpGet, game, url)
                if not ok then break end
                local data = HttpService:JSONDecode(res)
                cursor = data.nextPageCursor or ""
                for _,s in ipairs(data.data) do
                    if s.playing<s.maxPlayers and s.id~=game.JobId and not table.find(tried,s.id) then
                        table.insert(tried,s.id)
                        TeleportService:TeleportToPlaceInstance(game.PlaceId,s.id,game.Players.LocalPlayer)
                        return
                    end
                end
                if cursor=="" then wait(1); tried = {} end
            end
        ]])()
    end)

    local recentBtn = mkBtn("Recent Servers", UDim2.new(1,-260,0.5,-80), function()
        recentOpen = not recentOpen
        panelSnipe.Visible, snipeOpen = false, false
        panelRecent.Visible = recentOpen
        TweenService:Create(panelRecent,TweenInfo.new(0.25),{Position = recentOpen and UDim2.new(1,-300,0.5,-130) or UDim2.new(1,0,0.5,-130)}):Play()
    end)
    local snipeBtn = mkBtn("Stream Snipe", UDim2.new(1,-120,0.5,-80), function()
        snipeOpen = not snipeOpen
        panelRecent.Visible, recentOpen = false, false
        panelSnipe.Visible = snipeOpen
        TweenService:Create(panelSnipe,TweenInfo.new(0.25),{Position = snipeOpen and UDim2.new(1,-400,0.5,-130) or UDim2.new(1,0,0.5,-130)}):Play()
    end)

    local function mkPanel(sizeX,sizeY)
        local f=Instance.new("Frame",gui)
        f.Size, f.Position = UDim2.new(0,sizeX,0,sizeY), UDim2.new(1,0,0.5,-sizeY/2)
        f.BackgroundColor3, f.BorderSizePixel = Color3.fromRGB(25,25,25), 0
        f.Visible, f.ZIndex = false, 9
        return f, Instance.new("ScrollingFrame", f)
    end

    local panelRecent, panelSnipe
    panelRecent, scrollRecent = mkPanel(300,260)
    scrollRecent.Size, scrollRecent.CanvasSize, scrollRecent.ScrollBarThickness = UDim2.new(1,0,1,0), UDim2.new(0,0,0,0), 4
    panelSnipe, scrollSnipe = mkPanel(400,260)
    scrollSnipe.Size, scrollSnipe.CanvasSize, scrollSnipe.ScrollBarThickness = UDim2.new(1,0,1,0), UDim2.new(0,0,0,0),4

    local function refreshRecent()
        scrollRecent:ClearAllChildren()
        local y=0
        for _,id in ipairs(tracked) do
            local row=Instance.new("Frame",scrollRecent)
            row.Size, row.Position = UDim2.new(1,-10,0,50), UDim2.new(0,5,0,y)
            row.BackgroundColor3 = Color3.fromRGB(35,35,35)
            local lbl=Instance.new("TextLabel",row)
            lbl.Size, lbl.Position = UDim2.new(1,-80,1,0), UDim2.new(0,5,0,0)
            lbl.BackgroundTransparency, lbl.Font, lbl.TextSize = 1, Enum.Font.Gotham,14
            lbl.Text = (id==JobId and"[Current] " or "").."Server ID: "..id
            lbl.TextColor3 = (id==JobId and Color3.fromRGB(100,255,100) or Color3.new(1,1,1))
            if id~=JobId then
                local jb=Instance.new("TextButton",row)
                jb.Size, jb.Position = UDim2.new(0,60,0,30), UDim2.new(1,-70,0.5,-15)
                jb.Text, jb.Font, jb.TextSize = "Join", Enum.Font.GothamBold,13
                jb.BackgroundColor3, jb.TextColor3 = Color3.fromRGB(80,80,80), Color3.new(1,1,1)
                jb.MouseButton1Click:Connect(function()
                    TeleportService:TeleportToPlaceInstance(PlaceId,id,Player)
                end)
            end
            y+=55
        end
        scrollRecent.CanvasSize=UDim2.new(0,0,0,y+5)
    end

    local function refreshSnipe()
        scrollSnipe:ClearAllChildren()
        local y=0
        local lbl=Instance.new("TextLabel",scrollSnipe)
        lbl.Size, lbl.Position = UDim2.new(1,-10,0,20), UDim2.new(0,5,0,y)
        lbl.BackgroundTransparency, lbl.Font, lbl.TextSize = 14,Enum.Font.Gotham,"Username/UserId:"
        lbl.TextColor3 = Color3.new(1,1,1); y+=25

        local boxUser=Instance.new("TextBox",scrollSnipe)
        boxUser.Size, boxUser.Position = UDim2.new(1,-10,0,30), UDim2.new(0,5,0,y)
        boxUser.BackgroundColor3, boxUser.TextColor3 = Color3.fromRGB(61,61,61), Color3.new(1,1,1); boxUser.Font, boxUser.TextSize = Enum.Font.Gotham,14
        boxUser.ClearTextOnFocus = false; y+=45

        local boxPlace=Instance.new("TextBox",scrollSnipe)
        boxPlace.Size, boxPlace.Position = UDim2.new(1,-10,0,30), UDim2.new(0,5,0,y)
        boxPlace.BackgroundColor3, boxPlace.TextColor3 = Color3.fromRGB(61,61,61), Color3.new(1,1,1); boxPlace.Font, boxPlace.TextSize = Enum.Font.Gotham,14
        boxPlace.PlaceholderText = "PlaceId (blank = current)"; y+=45

        local btn=Instance.new("TextButton",scrollSnipe)
        btn.Size, btn.Position = UDim2.new(1,-10,0,40),UDim2.new(0,5,0,y)
        btn.Text, btn.Font, btn.TextSize = "Start Snipe",Enum.Font.GothamBold,16
        btn.BackgroundColor3,btn.TextColor3 = Color3.fromRGB(40,40,40),Color3.new(1,1,1); y+=50

        local status=Instance.new("TextLabel",scrollSnipe)
        status.Size, status.Position = UDim2.new(1,-10,0,40),UDim2.new(0,5,0,y)
        status.BackgroundTransparency, status.Font, status.TextSize = 1,Enum.Font.Gotham,14
        status.TextColor3 = Color3.new(1,1,0); y+=45

        scrollSnipe.CanvasSize=UDim2.new(0,0,0,y+5)

        btn.MouseButton1Click:Connect(function()
            local target = boxUser.Text
            if target=="" then status.Text="Enter username or ID"; return end
            status.Text = "Looking up user..."
            local success, userId = pcall(function()
                return tonumber(target) or Players:GetUserIdFromNameAsync(target)
            end)
            if not success then status.Text="Invalid user"; return end
            status.Text="Searching servers for user..."
            spawn(function()
                for cursor=""
                , count=0 do
                    local url="https://games.roblox.com/v1/games/" .. (tonumber(boxPlace.Text) or PlaceId) .. "/servers/Public?limit=100"..
                        (cursor~="" and"&cursor="..cursor or"")
                    local ok,res = pcall(game.HttpGet,game,url)
                    if not ok then break end
                    local data=HttpService:JSONDecode(res)
                    cursor=data.nextPageCursor or ""
                    for _,srv in ipairs(data.data) do
                        for _,token in ipairs(srv.playerTokens or {}) do
                            local req=game:HttpGet("https://thumbnails.roblox.com/v1/users/avatar-headshot?userIds="..userId.."&size=48x48&format=png")
                            if req:find(tostring(srv.id)) then
                                status.Text="Found; teleporting..."
                                TeleportService:TeleportToPlaceInstance(boxPlace.Text=="" and PlaceId or tonumber(boxPlace.Text),srv.id,Player)
                                return
                            end
                        end
                    end
                    if cursor=="" then status.Text="Not found"; break end
                end
            end)
        end)
    end

    local recentOpen, snipeOpen = false, false
    refreshRecent()
    refreshSnipe()
end)
